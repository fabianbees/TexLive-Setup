variables:
  CI_BUILD_IMAGE: "docker:latest"
  CI_BUILD_AMD64: "enabled"
  CI_BUILD_ARM64: "enabled"
  CI_BUILD_ARMv7: ""


# Build Stages
stages:
- build
- release


# Pre-Script: Generate Tags, Login
.build:
  image: $CI_BUILD_IMAGE
  stage: build
  before_script:
    - |
      if [[ -z "$CI_COMMIT_TAG" ]]; then
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
      else
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_TAG}
      fi
    - echo "$REGISTRY_PASS" | docker login $REGISTRY --username $REGISTRY_USER --password-stdin



# AMD64 Build
build:amd64:
  extends: .build
  only:
    variables:
      - $CI_BUILD_AMD64
  tags:
    - amd64
  script:
    - docker build -t "$CI_APPLICATION_REPOSITORY/amd64:$CI_APPLICATION_TAG" .
    - docker push "$CI_APPLICATION_REPOSITORY/amd64:$CI_APPLICATION_TAG" 


# ARM64 Build
build:arm64:
  extends: .build
  only:
    variables:
      - $CI_BUILD_ARM64
  tags:
    - arm64
  script:
    - docker build -t "$CI_APPLICATION_REPOSITORY/arm64:$CI_APPLICATION_TAG" .
    - docker push "$CI_APPLICATION_REPOSITORY/arm64:$CI_APPLICATION_TAG"


# ARMv7 Build
build:armv7:
  extends: .build
  only:
    variables:
      - $CI_BUILD_ARMv7
  tags:
    - armv7
  script:
    - docker build -t "$CI_APPLICATION_REPOSITORY/armv7:$CI_APPLICATION_TAG" .
    - docker push "$CI_APPLICATION_REPOSITORY/armv7:$CI_APPLICATION_TAG"



# Building & Pushing Manifest
build:manifest:
  extends: .build
  stage: release
  script:
    - echo "Checking amd86 build..." && [[ $CI_BUILD_AMD64 ]] && echo "found" && export CI_MANIFEST_LIST="$CI_APPLICATION_REPOSITORY/amd64:$CI_APPLICATION_TAG"
    - echo "Checking arm64 build..." && [[ $CI_BUILD_ARM64 ]] && echo "found" && export CI_MANIFEST_LIST="$CI_MANIFEST_LIST $CI_APPLICATION_REPOSITORY/arm64:$CI_APPLICATION_TAG"
    - echo "Checking arm build..." && [[ $CI_BUILD_ARMv7 ]] && echo "found" && export CI_MANIFEST_LIST="$CI_MANIFEST_LIST $CI_APPLICATION_REPOSITORY/arm:$CI_APPLICATION_TAG"
    - export DOCKER_CLI_EXPERIMENTAL=enabled
    - echo $CI_MANIFEST_LIST
    - docker manifest create $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG $CI_MANIFEST_LIST && docker manifest push $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG
    - docker manifest create $CI_APPLICATION_REPOSITORY:latest $CI_MANIFEST_LIST && docker manifest push $CI_APPLICATION_REPOSITORY:latest
    - docker manifest create $CI_REGISTRY_IMAGE:latest $CI_MANIFEST_LIST && docker manifest push $CI_REGISTRY_IMAGE:latest
    #- echo "Checking master" && [[ $CI_COMMIT_REF_NAME == "master" ]] && docker manifest create $CI_REGISTRY_IMAGE:latest $CI_MANIFEST_LIST && docker manifest push $CI_REGISTRY_IMAGE:latest
